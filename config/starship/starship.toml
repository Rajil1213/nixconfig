[directory]
style = "purple underline"
read_only_style = "white"
format = "[$read_only]($read_only_style)[$path]($style) "
truncation_length = 2 

# Before all the version info (python, nodejs, php, etc.)
[git_status]
style = "white"
ahead = "⇡${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
behind = "⇣${count}"
deleted = "x"

# Last param in the first line/row
[cmd_duration]
style = "bright-white"
min_time = 1
format = "took [$duration]($style)"
disabled = false

## SECOND LINE/ROW: Prompt
# Somethere at the beginning
[battery]
full_symbol = "🔋"
charging_symbol = "⚡️"
discharging_symbol = "💀"

[[battery.display]]  # "bold red" style when capacity is between 0% and 20%
threshold = 15
style = "bold red"

# Prompt: optional param 1
[time]
format = " 🕙 $time($style)\n"
time_format = "%T"
style = "bright-white"
disabled = true

# Prompt: param 2 └─
[character]
success_symbol = " [╰─λ](bold red)"
error_symbol = " [× ](bold red)"

# SYMBOLS
[status]
format = '[\[$symbol$status_common_meaning$status_signal_name$status_maybe_int\]]($style)'
map_symbol = true
disabled = false

[docker_context]
symbol = " "
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

# [elixir]
# symbol = " "
# 
# [elm]
# symbol = " "

[git_branch]
symbol = " "

[golang]
symbol = " "

[hg_branch]
symbol = " "

[java]
symbol = " "

# [julia]
# symbol = " "
# 
# [haskell]
# symbol = "λ "

[memory_usage]
symbol = " "

# [nim]
# symbol = " "
# 
# [nix_shell]
# symbol = " "
# 
# [package]
# symbol = " "
# 
# [perl]
# symbol = " "
# 
# [php]
# symbol = " "

[python]
symbol = " "
#pyenv_version_name = true
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

# [ruby]
# symbol = " "

[rust]
symbol = "🦀 "

# [scala]
# symbol = " "
# 
# [shlvl]
# symbol = " "
# 
# [swift]
# symbol = "ﯣ "

[nodejs]
format = "via [ Node.js $version](green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]
